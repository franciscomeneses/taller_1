x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(y = Grupo, x = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=8) +  # Etiqueta en la media
geom_errorbar(aes(xmin = Media - Error, xmax = Media + Error),vjust=-0.1, width = 0.2) +
geom_text(aes(label = Media - Error, x = Media - Error), vjust = 1.5, color = "red",
size=8) +  # Límite inferior
geom_text(aes(label = Media + Error, x = Media + Error), vjust = -1, color = "red",
size=8) +  # Límite superior
labs(title = "Conocimiento Civico según dependencia",
x = "Puntaje Conocimiento Civico ",
y = "Grupo") +
xlim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(y = Grupo, x = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=8) +  # Etiqueta en la media
geom_errorbar(aes(xmin = Media - Error, xmax = Media + Error),vjust=-0.1, width = 0.2) +
geom_text(aes(label = Media - Error, x = Media - Error), vjust = 1.5, color = "red",
size=8) +  # Límite inferior
geom_text(aes(label = Media + Error, x = Media + Error), vjust = -1, color = "red",
size=8) +  # Límite superior
labs(title = "Conocimiento Civico según dependencia",
x = "Puntaje Conocimiento Civico ",
y = "Grupo") +
xlim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=8) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error),vjust=-0.1, width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error), vjust = 1.5, color = "red",
size=8) +  # Límite inferior
geom_text(aes(label = Media + Error, y = Media + Error), vjust = -1, color = "red",
size=8) +  # Límite superior
labs(title = "Conocimiento Civico según dependencia",
y = "Puntaje Conocimiento Civico ",
x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
) + coord_flip()
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=8) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error),vjust=-0.1, width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error), vjust = 1.5, color = "red",
size=8) +  # Límite inferior
geom_text(aes(label = Media + Error, y = Media + Error), vjust = -1, color = "red",
size=8) +  # Límite superior
labs(title = "Conocimiento Civico según dependencia",
y = "Puntaje Conocimiento Civico ",
x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
) + coord_flip()
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=8) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error),vjust=-0.1, width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error), vjust = 1.5, color = "red",
size=8) +  # Límite inferior
geom_text(aes(label = Media + Error, y = Media + Error), vjust = -1, color = "red",
size=8) +  # Límite superior
labs(title = "Conocimiento Civico según dependencia",
y = "Puntaje Conocimiento Civico ",
x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
) + coord_flip()
# Cargar librerías necesarias
library(ggplot2)
# Crear datos ficticios
set.seed(123)
categorias <- c("Municipales", "Slep", "Subvencionados")
medias <- c(47, 57, 70)  # Valores entre 0 y 100
errores <- c(10, 15, 15)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=8) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error),vjust=-0.1, width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error), vjust = 1.5, color = "red",
size=8) +  # Límite inferior
geom_text(aes(label = Media + Error, y = Media + Error), vjust = -1, color = "red",
size=8) +  # Límite superior
labs(title = "Conocimiento Civico según dependencia",
y = "Puntaje Conocimiento Civico ",
x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
) + coord_flip()
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=8) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error),vjust=-0.1, width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error), hjust = 1.5, color = "red",
size=8) +  # Límite inferior
geom_text(aes(label = Media + Error, y = Media + Error), hjust = -1, color = "red",
size=8) +  # Límite superior
labs(title = "Conocimiento Civico según dep",
y = "Puntaje Conocimiento Civico ",
x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
) + coord_flip()  + scale_fill_brewer(palette = "PuOr")
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=8) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error),vjust=-0.1, width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error), hjust = 1.5, color = "red",
size=8) +  # Límite inferior
geom_text(aes(label = Media + Error, y = Media + Error), hjust = -1, color = "red",
size=8) +  # Límite superior
labs(title = "Conocimiento Civico según dep",
y = "Puntaje Conocimiento Civico ",
x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
) + coord_flip()  + scale_fill_brewer(palette = "PuOr")
#install.packages("pagedown")
#pagedown::chrome_print("Presentacion.html",output="Presentacion.pdf")
library(dplyr)
require("knitr")
options(htmltools.dir.version = FALSE)
pacman::p_load(RefManageR)
# Cargar librerías necesarias
library(ggplot2)
# Crear datos ficticios
set.seed(123)
categorias <- c("Desayuno + Almuerzo", "Desayuno", "Nada")
medias <- c(75, 50, 25)  # Valores entre 0 y 100
errores <- c(10, 15, 4)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold", size=10) +  # Etiqueta en la media
#geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error), width = 0.2) +
#geom_text(aes(label = Media - Error, y = Media - Error), vjust = 1.5, color = "red") +  # Límite inferior
#geom_text(aes(label = Media + Error, y = Media + Error), vjust = -1, color = "red") +  # Límite superior
labs(title = "Asistencia según intervención",
y = "Porcentaje de asistencia",
x = "Grupo") +
ylim(0, 80) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
)
# Cargar librerías necesarias
library(ggplot2)
# Crear datos ficticios
set.seed(123)
categorias <- c("Desayuno + Almuerzo", "Desayuno", "Nada")
medias <- c(75, 50, 25)  # Valores entre 0 y 100
errores <- c(10, 20, 4)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold", size=10) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error), width = 0.2) +
#geom_text(aes(label = Media - Error, y = Media - Error), vjust = 1.5, color = "red") +  # Límite inferior
#geom_text(aes(label = Media + Error, y = Media + Error), vjust = -1, color = "red") +  # Límite superior
labs(title = "Asistencia según intervención",
y = "Porcentaje de asistencia",
x = "Grupo") +
ylim(0, 90) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
)
# Cargar librerías necesarias
library(ggplot2)
# Crear datos ficticios
set.seed(123)
categorias <- c("Desayuno + Almuerzo", "Desayuno", "Nada")
medias <- c(75, 50, 25)  # Valores entre 0 y 100
errores <- c(10, 15, 4)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=6) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error), width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error),
vjust = 1.5, color = "red",size=6) +  # Límite inferior
geom_text(aes(label = Media + Error, y = Media + Error),
vjust = -1, color = "red",size=6) +  # Límite superior
labs(title = "Asistencia según intervención",
y = "Porcentaje de asistencia",
x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
)
library(kableExtra)
# Crear datos ficticios
set.seed(123)
categorias <- c("Desayuno + Almuerzo", "Desayuno", "Nada")
medias <- c(75, 50, 25)  # Valores entre 0 y 100
errores <- c(10, 15, 4)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
datos %>% mutate(
valor_inferior= as.numeric(Media -  Error),
valor_superior= as.numeric(Media +  Error),
) %>% select(-Error) %>%
kbl() %>%
kable_classic_2(full_width = F)
# Cargar librerías necesarias
library(ggplot2)
# Crear datos ficticios
set.seed(123)
categorias <- c("Municipales", "Slep", "Subvencionados")
medias <- c(47, 57, 70)  # Valores entre 0 y 100
errores <- c(10, 15, 15)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=8) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error),vjust=-0.1, width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error), hjust = 1.5, color = "red",
size=8) +  # Límite inferior
geom_text(aes(label = Media + Error, y = Media + Error), hjust = -1, color = "red",
size=8) +  # Límite superior
labs(title = "Conocimiento Civico según dep",
y = "Puntaje Conocimiento Civico ",
x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
) + coord_flip()  + scale_fill_brewer(palette = "PuOr")
library(kableExtra)
# Crear datos ficticios
set.seed(123)
categorias <- c("Municipales", "Slep", "Subvencionados")
medias <- c(262, 220, 270)  # Valores entre 0 y 100
errores <- c(5, 5, 5)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
datos %>% mutate(
valor_inferior= as.numeric(Media -  Error),
valor_superior= as.numeric(Media +  Error),
) %>% select(-Error) %>%
kbl() %>%
kable_classic_2(full_width = F)
#install.packages("pagedown")
#pagedown::chrome_print("Presentacion.html",output="Presentacion.pdf")
library(dplyr)
require("knitr")
options(htmltools.dir.version = FALSE)
pacman::p_load(RefManageR)
# Cargar librerías necesarias
library(ggplot2)
# Crear datos ficticios
set.seed(123)
categorias <- c("Desayuno + Almuerzo", "Desayuno", "Nada")
medias <- c(75, 50, 25)  # Valores entre 0 y 100
errores <- c(10, 15, 4)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold", size=10) +  # Etiqueta en la media
#geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error), width = 0.2) +
#geom_text(aes(label = Media - Error, y = Media - Error), vjust = 1.5, color = "red") +  # Límite inferior
#geom_text(aes(label = Media + Error, y = Media + Error), vjust = -1, color = "red") +  # Límite superior
labs(title = "Asistencia según intervención",
y = "Porcentaje de asistencia",
x = "Grupo") +
ylim(0, 80) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
)
# Cargar librerías necesarias
library(ggplot2)
# Crear datos ficticios
set.seed(123)
categorias <- c("Desayuno + Almuerzo", "Desayuno", "Nada")
medias <- c(75, 50, 25)  # Valores entre 0 y 100
errores <- c(10, 20, 4)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold", size=10) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error), width = 0.2) +
#geom_text(aes(label = Media - Error, y = Media - Error), vjust = 1.5, color = "red") +  # Límite inferior
#geom_text(aes(label = Media + Error, y = Media + Error), vjust = -1, color = "red") +  # Límite superior
labs(title = "Asistencia según intervención",
y = "Porcentaje de asistencia",
x = "Grupo") +
ylim(0, 90) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
)
# Cargar librerías necesarias
library(ggplot2)
# Crear datos ficticios
set.seed(123)
categorias <- c("Desayuno + Almuerzo", "Desayuno", "Nada")
medias <- c(75, 50, 25)  # Valores entre 0 y 100
errores <- c(10, 15, 4)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=6) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error), width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error),
vjust = 1.5, color = "red",size=6) +  # Límite inferior
geom_text(aes(label = Media + Error, y = Media + Error),
vjust = -1, color = "red",size=6) +  # Límite superior
labs(title = "Asistencia según intervención",
y = "Porcentaje de asistencia",
x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
)
library(kableExtra)
# Crear datos ficticios
set.seed(123)
categorias <- c("Desayuno + Almuerzo", "Desayuno", "Nada")
medias <- c(75, 50, 25)  # Valores entre 0 y 100
errores <- c(10, 15, 4)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
datos %>% mutate(
valor_inferior= as.numeric(Media -  Error),
valor_superior= as.numeric(Media +  Error),
) %>% select(-Error) %>%
kbl() %>%
kable_classic_2(full_width = F)
# Cargar librerías necesarias
library(ggplot2)
# Crear datos ficticios
set.seed(123)
categorias <- c("Municipales", "Slep", "Subvencionados")
medias <- c(47, 57, 70)  # Valores entre 0 y 100
errores <- c(10, 15, 15)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
# Graficar barras con intervalos de confianza y etiquetas
ggplot(datos, aes(x = Grupo, y = Media,  fill = Grupo,)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold",
size=8) +  # Etiqueta en la media
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error),vjust=-0.1, width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error), hjust = 1.5, color = "red",
size=8) +  # Límite inferior
geom_text(aes(label = Media + Error, y = Media + Error), hjust = -1, color = "red",
size=8) +  # Límite superior
labs(title = "Conocimiento Civico según dep",
y = "Puntaje Conocimiento Civico ",
x = "Grupo") +
ylim(0, 100) +  # Ajustar límites del eje Y
theme_minimal() +
theme(title = element_text(size=20),
legend.position = "bottom",
legend.text = element_text(size=20),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
) + coord_flip()  + scale_fill_brewer(palette = "PuOr")
library(kableExtra)
# Crear datos ficticios
set.seed(123)
categorias <- c("Municipales", "Slep", "Subvencionados")
medias <- c(262, 220, 270)  # Valores entre 0 y 100
errores <- c(5, 5, 5)  # Supuestos errores estándar
# Crear un data frame
datos <- data.frame(Grupo = categorias, Media = medias, Error = errores)
datos %>% mutate(
valor_inferior= as.numeric(Media -  Error),
valor_superior= as.numeric(Media +  Error),
) %>% select(-Error) %>%
kbl() %>%
kable_classic_2(full_width = F)
xaringan::infinite_moon_reader()
# Fijar la semilla para reproducibilidad
set.seed(123)
# Crear la base de datos con 100 observaciones
grupo <- rep(c("A", "B"), each = 50)  # Variable categórica de dos niveles
valor <- c(rnorm(50, mean = 10, sd = 2),  # Grupo A
rnorm(50, mean = 12, sd = 2))  # Grupo B
# Crear el data frame
datos <- data.frame(grupo, valor)
# Realizar la prueba t de Student
resultado_ttest <- t.test(valor ~ grupo, data = datos, var.equal = TRUE)
# Mostrar el resultado
print(resultado_ttest)
library(dplyr)
require("knitr")
options(htmltools.dir.version = FALSE)
pacman::p_load(RefManageR)
options(scipen=999)
# Fijar la semilla para reproducibilidad
set.seed(123)
# Crear la base de datos con 100 observaciones
grupo <- rep(c("Hom", "Muj"), each = 50)  # Variable categórica de dos niveles
valor <- c(rnorm(50, mean = 62, sd = 2),  # Grupo A
rnorm(50, mean = 60, sd = 2))  # Grupo B
# Crear el data frame
datos <- data.frame(grupo, valor)
# Realizar la prueba t de Student
resultado_ttest <- t.test(valor ~ grupo, data = datos, var.equal = TRUE)
# Mostrar el resultado
print(resultado_ttest)
