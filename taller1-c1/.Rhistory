library(dplyr)
require("knitr")
options(htmltools.dir.version = FALSE)
pacman::p_load(RefManageR)
# UI de la aplicación
ui <- fluidPage(
titlePanel("Puntaje SIMCE según Dependencia"),
sidebarLayout(
sidebarPanel(
sliderInput("media_municipales", "Media Municipales", min = 200, max = 300, value = 230),
sliderInput("error_municipales", "Error Municipales", min = 0, max = 20, value = 10),
sliderInput("media_slep", "Media Slep", min = 200, max = 300, value = 250),
sliderInput("error_slep", "Error Slep", min = 0, max = 20, value = 15),
sliderInput("media_subvencionados", "Media Subvencionados", min = 200, max = 300, value = 280),
sliderInput("error_subvencionados", "Error Subvencionados", min = 0, max = 20, value = 4)
),
mainPanel(
plotOutput("barPlot")
)
)
)
library(shiny)
library(ggplot2)
# UI de la aplicación
ui <- fluidPage(
titlePanel("Puntaje SIMCE según Dependencia"),
sidebarLayout(
sidebarPanel(
sliderInput("media_municipales", "Media Municipales", min = 200, max = 300, value = 230),
sliderInput("error_municipales", "Error Municipales", min = 0, max = 20, value = 10),
sliderInput("media_slep", "Media Slep", min = 200, max = 300, value = 250),
sliderInput("error_slep", "Error Slep", min = 0, max = 20, value = 15),
sliderInput("media_subvencionados", "Media Subvencionados", min = 200, max = 300, value = 280),
sliderInput("error_subvencionados", "Error Subvencionados", min = 0, max = 20, value = 4)
),
mainPanel(
plotOutput("barPlot")
)
)
)
# Servidor de la aplicación
server <- function(input, output) {
output$barPlot <- renderPlot({
# Crear datos basados en los inputs
datos <- data.frame(
Grupo = c("Municipales", "Slep", "Subvencionados"),
Media = c(input$media_municipales, input$media_slep, input$media_subvencionados),
Error = c(input$error_municipales, input$error_slep, input$error_subvencionados)
)
# Graficar
ggplot(datos, aes(x = Grupo, y = Media, fill = Grupo)) +
geom_bar(stat = "identity", color = "black") +
geom_text(aes(label = Media, y = Media), vjust = -0.5, fontface = "bold") +
geom_errorbar(aes(ymin = Media - Error, ymax = Media + Error), width = 0.2) +
geom_text(aes(label = Media - Error, y = Media - Error), vjust = 1.5, color = "red") +
geom_text(aes(label = Media + Error, y = Media + Error), vjust = -1, color = "red") +
labs(title = "Puntaje SIMCE según Dependencia",
y = "Puntaje SIMCE",
x = "Grupo") +
theme_minimal()
})
}
# Ejecutar la aplicación
shinyApp(ui = ui, server = server)
